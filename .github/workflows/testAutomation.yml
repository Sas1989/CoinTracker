name: "Create cluster using KinD"
on: [pull_request, push]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: medyagh/setup-minikube@latest
      - name: Testing
        run: |
          kubectl cluster-info
          minikube tunnel
      - name: Deploy app to Kubernetes
        run: |
          cd k8s
          kubectl apply -f rabbitmq-depl.yaml
          kubectl apply -f ingress.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml
          kubectl apply -f local-pvc.yaml
          kubectl apply -f cointrackercoin-depL.yaml
      - name: Wait service up
        run: | 
          kubectl get deploy
          kubectl wait --for=condition=available --timeout=120s --all deployment 
          kubectl wait --for=condition=Available --timeout=120s deploy -n ingress-nginx ingress-nginx-controller
      - name: Test Api
        run: |
          kubectl get nodes -o=jsonpath='{.items[0].status.addresses[0].address}'
          kubectl get services cointracker-api-coinlist -o=jsonpath='{.spec.ports[0].targetPort}'
          NODE_PORT=$(kubectl get services cointracker-api-coinlist -o=jsonpath='{.spec.ports[0].targetPort}')
          NODE_IP=$(kubectl get nodes -o=jsonpath='{.items[0].status.addresses[0].address}')
          kubectl get nodes
          kubectl get pods --all-namespaces
          kubectl get svc --all-namespaces
          echo "http://$NODE_IP:$NODE_PORT/api/coin"
          curl http://$NODE_IP:$NODE_PORT/api/coin
